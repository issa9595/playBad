#!/usr/bin/env node

const http = require('http');
const app = require('../app');

// Port configuré
const port = process.env.PORT || 3000;

// Ajout du port à l'application
app.set('port', port);

// Création du serveur HTTP
const server = http.createServer(app);

// Gestion des événements du serveur
server.on('error', onError);
server.on('listening', onListening);

// Lancer le serveur
server.listen(port);

// Gestion des erreurs
function onError(error) {
    if (error.syscall !== 'listen') {
        throw error;
    }

    const bind = typeof port === 'string' ? `Pipe ${port}` : `Port ${port}`;

    switch (error.code) {
        case 'EACCES':
            console.error(`${bind} requires elevated privileges`);
            process.exit(1);
            break;
        case 'EADDRINUSE':
            console.error(`${bind} is already in use`);
            process.exit(1);
            break;
        default:
            throw error;
    }
}

// Événement 'listening'
function onListening() {
    const addr = server.address();
    const bind = typeof addr === 'string' ? `pipe ${addr}` : `port ${addr.port}`;
    console.log(`Listening on ${bind}`);
}
